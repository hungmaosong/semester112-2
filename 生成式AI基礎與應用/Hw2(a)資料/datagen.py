# -*- coding: utf-8 -*-
"""dataGen.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hBvwIcHrIzyUEwA_mKzgmKy4uCzrD1G4
"""

import numpy as np
import pandas as pd
import csv

def weird_division(n, d):
    return n / d if d else 0

def generate_data():
    first_num = np.random.randint(low=0,high=30)
    second_num = np.random.randint(low=0,high=30)
    add = np.random.randint(low=0, high=100)
    add2 = np.random.randint(low=0, high=100)
    if add <33:
        expression = str(first_num) + '+' + str(second_num)
        result = first_num+second_num
    elif add in range(33,66):
        expression = str(first_num) + '-' + str(second_num)
        result = first_num-second_num
    else :
        expression = str(first_num) + '*' + str(second_num)
        result = first_num*second_num

    third_num = np.random.randint(low=0,high=30)
    if add2 <33:
        expression = expression + '+' + str(third_num)+ "="
        result = result + third_num
    elif add2 in range(33,66):
        expression = expression + '-' + str(third_num)+ "="
        result = result - third_num
    else :
        expression = expression+ '*' + str(third_num) + "="
        if add <33:
            result = first_num+(second_num*third_num)
        elif add in range(33,66):
            result = first_num-(second_num*third_num)
        else:
            result = result * third_num
    #else:
    #    expression = str(first_num) + '/' + str(second_num)
    #    res = weird_division(first_num, second_num)
    #    result = str(round(res,2))


    return expression, result

generate_data()

header = ['src', 'tgt']
with open('data.csv', 'w', encoding='UTF8',newline='') as f:
    writer = csv.writer(f)
    num_set=set()
    # write the header
    dic={"":0}
    count=0
    writer.writerow(header)
    while count<20000:
        # write the data
        src,tgt=generate_data()
        if not src+str(tgt) in num_set:
            writer.writerow([src,str(tgt)])
            num_set.add(src+str(tgt))
            count+=1

            if(str(tgt) in dic.keys()):
                dic[str(tgt)]+=1
            else:
                dic[str(tgt)]=1

sort_by_value = dict(sorted(dic.items(), key=lambda item: item[1]))
sort_by_value